version: '2.4'

services:
  app:
    build: .
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    pids_limit: 500
    cpus: 2
    mem_limit: 2G
    restart: always
    stop_grace_period: 0s

  nginx:
    image: nginx:latest
    ports:
      - "8044:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./web:/usr/share/nginx/html:ro
    depends_on:
      - app
    pids_limit: 500
    cpus: 2
    mem_limit: 2G
    restart: always
    stop_grace_period: 0s

  db:
    image: postgres:15.3
    command: "postgres -c shared_buffers=256MB -c max_connections=200"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${TICKET_DB_NAME}
      POSTGRES_USER: ${TICKET_DB_USER}
      POSTGRES_PASSWORD: ${TICKET_DB_PASSWORD}
      PGUSER: ${TICKET_DB_USER}
      PGDATABASE: ${TICKET_DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - postgres_ticket:/var/lib/postgresql/data
    pids_limit: 500
    cpus: 2
    mem_limit: 2G
    restart: always

volumes:
  "postgres_ticket":
